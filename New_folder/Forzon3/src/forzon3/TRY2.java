/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forzon3;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author chaitany
 */
public class TRY2 extends javax.swing.JFrame {

    /**
     * Creates new form TRY2
     */
    public TRY2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bill1 = new forzon3.Bill();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(bill1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1376, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addContainerGap(517, Short.MAX_VALUE))
        );

        setBounds(0, 0, 2000, 894);
    }// </editor-fold>//GEN-END:initComponents
         public static java.sql.Date getCurrentDate() {
    java.util.Date today = new java.util.Date();
    return new java.sql.Date(today.getTime());
}
             public  ResultSet rs=null;
    public Connection  con=null;
    public PreparedStatement pst=null;
public void connection(){
     try{
             con=DriverManager.getConnection("jdbc:mysql://localhost:3306/froze","root","");
    
      }
          catch(Exception e){
    System.out.println(e);    
        }
      }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    connection();
        System.out.println(getCurrentDate().toString());
   String[] md=getCurrentDate().toString().split("-");
   System.out.println(md[0]);
   System.out.println(md[1]);
   System.out.println(md[2]);
try{
    int adde=20;
      pst=con.prepareStatement("SELECT * FROM `graph_sale_month`");
     rs=pst.executeQuery();
    int yeae = 0;
    while(rs.next()){
    yeae=rs.getInt("Year");
}
   if(yeae!= Integer.parseInt(md[0])){
    
             connection();
                pst=con.prepareStatement("INSERT INTO `graph_sale_month`(`Year`, `January`, `February`, `March`, `April`, `May`, `June`, `July`, `August`, `September`, `October`, `November`, `December`)values(?,?,?,?,?,?,?,?,?,?,?,?,?)");        
        pst.setInt(1, Integer.parseInt(md[0]));
        pst.setInt(2, adde);
        pst.setInt(3, 0);
        pst.setInt(4, 0);
        pst.setInt(5, 0);
        pst.setInt(6, 0);
        pst.setInt(7, 0);
        pst.setInt(8, 0);
        pst.setInt(9, 0);
        pst.setInt(10, 0);
        pst.setInt(11, 0);
        pst.setInt(12, 0);
        pst.setInt(13, 0);
            pst.executeUpdate();
                 JOptionPane.showMessageDialog(this,"Add"); 

   }
   else{
                  connection();
                 pst=con.prepareStatement("SELECT * FROM `graph_sale_month` where Year='"+Integer.parseInt(md[0])+"'");
    int month=0; 
       ResultSet rs1=null;
   Connection  con1=null;
    PreparedStatement pst1=null;
           con1=DriverManager.getConnection("jdbc:mysql://localhost:3306/froze","root","");
    
      
    rs=pst.executeQuery();
   switch(Integer.parseInt(md[1])){  
       case 1:     
           while(rs.next()){month=rs.getInt("January");}
            adde=adde+month;
            pst1=con1.prepareStatement("UPDATE `graph_sale_month` SET `January`="+adde+" WHERE `Year`="+Integer.parseInt(md[0])+";");
             pst1.execute();
           
           System.out.println("update 1");
           break;
       case 2:  
           while(rs.next()){ month=rs.getInt("February");}
            adde=adde+month;
            pst1=con1.prepareStatement("UPDATE `graph_sale_month` SET `February`="+adde+" WHERE `Year`="+Integer.parseInt(md[0])+";");
             pst1.execute();
          
           System.out.println("update 2");
           break;
       case 3:            
            while(rs.next()){month=rs.getInt("March");}
            adde=adde+month;
           
            pst1=con1.prepareStatement("UPDATE `graph_sale_month` SET `March`="+adde+" WHERE `Year`="+Integer.parseInt(md[0])+";");
      pst1.execute();
           break;   
      case 4:   
           while(rs.next()){month=rs.getInt("April");}
             adde=adde+month;
            pst1=con1.prepareStatement("UPDATE `graph_sale_month` SET `April`="+adde+" WHERE `Year`="+Integer.parseInt(md[0])+";");
             pst1.execute();
          
           System.out.println("update 4");
           break;
       case 5:
            while(rs.next()){month=rs.getInt("May");}
             adde=adde+month;
            pst1=con1.prepareStatement("UPDATE `graph_sale_month` SET `May`="+adde+" WHERE `Year`="+Integer.parseInt(md[0])+";");
             pst1.execute();
          
            System.out.println("update 1");
           break;
       case 6:
           while(rs.next()){  month=rs.getInt("June");}
             adde=adde+month;
            pst1=con1.prepareStatement("UPDATE `graph_sale_month` SET `June`="+adde+" WHERE `Year`="+Integer.parseInt(md[0])+";");
             pst1.execute();
          
           System.out.println("update 1");
           break;
        case 7:
          while(rs.next()){ month=rs.getInt("July"); }
            adde=adde+month;
            pst1=con1.prepareStatement("UPDATE `graph_sale_month` SET `July`="+adde+" WHERE `Year`="+Integer.parseInt(md[0])+";");
             pst1.execute();
           
          System.out.println("update 1");
           break;
       case 8:
           while(rs.next()){ month=rs.getInt("August");}
            adde=adde+month;
            pst1=con1.prepareStatement("UPDATE `graph_sale_month` SET `August`="+adde+" WHERE `Year`="+Integer.parseInt(md[0])+";");
             pst1.execute();
          
           System.out.println("update 1");
           break;
        case 9:
            while(rs.next()){month=rs.getInt("September");}
             adde=adde+month;
            pst1=con1.prepareStatement("UPDATE `graph_sale_month` SET `September`="+adde+" WHERE `Year`="+Integer.parseInt(md[0])+";");
             pst1.execute();
          
            System.out.println("update 1");
           break;
      case 10:
             while(rs.next()){month=rs.getInt("October");}
             adde=adde+month;
            pst1=con1.prepareStatement("UPDATE `graph_sale_month` SET `October`="+adde+" WHERE `Year`="+Integer.parseInt(md[0])+";");
             pst1.execute();
          
             System.out.println("update 1");
           break;
      case 11:
             while(rs.next()){  month=rs.getInt("November");}
             adde=adde+month;
            pst1=con1.prepareStatement("UPDATE `graph_sale_month` SET `November`="+adde+" WHERE `Year`="+Integer.parseInt(md[0])+";");
             pst1.execute();
          
             System.out.println("update 1");
           break;
      case 12:
             while(rs.next()){  month=rs.getInt("December");}
             adde=adde+month;
            pst1=con1.prepareStatement("UPDATE `graph_sale_month` SET `December`="+adde+" WHERE `Year`="+Integer.parseInt(md[0])+";");
             pst1.execute();
          
             System.out.println("update 1");
           break;
     
     
           
   }
       
   }
       }
      catch (Exception ex) {
      System.out.print(ex);
      }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TRY2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TRY2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TRY2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TRY2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TRY2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private forzon3.Bill bill1;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
